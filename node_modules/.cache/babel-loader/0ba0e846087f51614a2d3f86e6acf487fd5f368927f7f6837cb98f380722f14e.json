{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WO\\\\Desktop\\\\WEB-DEV\\\\Webosmotic-Intern\\\\CLICK_UP_TASKS\\\\REACT\\\\contact-app\\\\src\\\\Components\\\\Snackbar.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomizedSnackbars() {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: \"Open Snackbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 3000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"success\",\n        variant: \"filled\",\n        sx: {\n          width: \"100%\"\n        },\n        children: \"Registration Successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomizedSnackbars, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = CustomizedSnackbars;\nvar _c;\n$RefreshReg$(_c, \"CustomizedSnackbars\");","map":{"version":3,"names":["React","Button","Snackbar","Alert","jsxDEV","_jsxDEV","CustomizedSnackbars","_s","open","setOpen","useState","handleClick","handleClose","event","reason","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","autoHideDuration","onClose","severity","variant","sx","width","_c","$RefreshReg$"],"sources":["C:/Users/WO/Desktop/WEB-DEV/Webosmotic-Intern/CLICK_UP_TASKS/REACT/contact-app/src/Components/Snackbar.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open Snackbar</Button>\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert\r\n          onClose={handleClose}\r\n          severity=\"success\"\r\n          variant=\"filled\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          Registration Successful!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBF,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMG,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IACrC,IAAIA,MAAM,KAAK,WAAW,EAAE;MAC1B;IACF;IAEAL,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EAED,oBACEJ,OAAA;IAAAU,QAAA,gBACEV,OAAA,CAACJ,MAAM;MAACe,OAAO,EAAEL,WAAY;MAAAI,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpDf,OAAA,CAACH,QAAQ;MAACM,IAAI,EAAEA,IAAK;MAACa,gBAAgB,EAAE,IAAK;MAACC,OAAO,EAAEV,WAAY;MAAAG,QAAA,eACjEV,OAAA,CAACF,KAAK;QACJmB,OAAO,EAAEV,WAAY;QACrBW,QAAQ,EAAC,SAAS;QAClBC,OAAO,EAAC,QAAQ;QAChBC,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAX,QAAA,EACvB;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACb,EAAA,CA9BuBD,mBAAmB;AAAAqB,EAAA,GAAnBrB,mBAAmB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}