{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WO\\\\Desktop\\\\WEB-DEV\\\\Webosmotic-Intern\\\\CLICK_UP_TASKS\\\\REACT\\\\contact-app\\\\src\\\\Components\\\\ImportCSV.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { useNavigate } from \"react-router-dom\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Alert from \"@mui/material/Alert\";\nimport Slide from \"@mui/material/Slide\";\nimport { getContactInStorage, getCookie, setContactInStorage } from \"../Services/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ImportCSV() {\n  _s();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const vertical = \"top\";\n  const horizontal = \"right\";\n  const navigate = useNavigate();\n  const activeUserId = getCookie();\n  function handleNavigate() {\n    navigate(\"/home/contacts\");\n  }\n  const handleFile = event => {\n    setOpenSnackbar(prev => true);\n    Papa.parse(event.target.files[0], {\n      complete: function (result) {\n        const data = [];\n        result.data.map(d => {\n          return data.push({\n            name: d[0],\n            email: d[1],\n            number: d[2],\n            avatar: d[3],\n            contactId: d[4]\n          });\n        });\n        data.shift();\n        const contacts = getContactInStorage([activeUserId]);\n        data.map(d => {\n          return contacts.push(d);\n        });\n        setContactInStorage([activeUserId], contacts);\n        setTimeout(handleNavigate, 1500);\n      }\n    });\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"click-away\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  function TransitionLeft(props) {\n    return /*#__PURE__*/_jsxDEV(Slide, {\n      ...props,\n      direction: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 3000,\n      onClose: handleClose,\n      TransitionComponent: TransitionLeft,\n      anchorOrigin: {\n        vertical,\n        horizontal\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: \"success\",\n        sx: {\n          width: \"100%\"\n        },\n        children: \"Contacts imported Successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Please upload the \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"csv\",\n          children: \".CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), \" file to import\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        accept: \".csv\",\n        onChange: handleFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ImportCSV, \"Mh0bgSsVER8m0YwUJT2MxRaHd1o=\", false, function () {\n  return [useNavigate];\n});\n_c = ImportCSV;\nvar _c;\n$RefreshReg$(_c, \"ImportCSV\");","map":{"version":3,"names":["React","useState","Papa","useNavigate","Snackbar","Alert","Slide","getContactInStorage","getCookie","setContactInStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","ImportCSV","_s","openSnackbar","setOpenSnackbar","vertical","horizontal","navigate","activeUserId","handleNavigate","handleFile","event","prev","parse","target","files","complete","result","data","map","d","push","name","email","number","avatar","contactId","shift","contacts","setTimeout","handleClose","reason","TransitionLeft","props","direction","fileName","_jsxFileName","lineNumber","columnNumber","children","open","autoHideDuration","onClose","TransitionComponent","anchorOrigin","severity","sx","width","className","type","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/WO/Desktop/WEB-DEV/Webosmotic-Intern/CLICK_UP_TASKS/REACT/contact-app/src/Components/ImportCSV.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Slide from \"@mui/material/Slide\";\r\nimport {\r\n  getContactInStorage,\r\n  getCookie,\r\n  setContactInStorage,\r\n} from \"../Services/storage\";\r\n\r\nexport default function ImportCSV() {\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  const vertical = \"top\";\r\n  const horizontal = \"right\";\r\n  const navigate = useNavigate();\r\n  const activeUserId = getCookie();\r\n  function handleNavigate() {\r\n    navigate(\"/home/contacts\");\r\n  }\r\n  const handleFile = (event) => {\r\n    setOpenSnackbar((prev) => true);\r\n    Papa.parse(event.target.files[0], {\r\n      complete: function (result) {\r\n        const data = [];\r\n        result.data.map((d) => {\r\n          return data.push({\r\n            name: d[0],\r\n            email: d[1],\r\n            number: d[2],\r\n            avatar: d[3],\r\n            contactId: d[4],\r\n          });\r\n        });\r\n        data.shift();\r\n        const contacts = getContactInStorage([activeUserId]);\r\n        data.map((d) => {\r\n          return contacts.push(d);\r\n        });\r\n        setContactInStorage([activeUserId], contacts);\r\n        setTimeout(handleNavigate, 1500);\r\n      },\r\n    });\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"click-away\") {\r\n      return;\r\n    }\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  function TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"left\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n        TransitionComponent={TransitionLeft}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: \"100%\" }}>\r\n          Contacts imported Successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <div className=\"App\">\r\n        <h3>\r\n          Please upload the <span className=\"csv\">.CSV</span> file to import\r\n        </h3>\r\n        <input\r\n          type=\"file\"\r\n          name=\"file\"\r\n          accept=\".csv\"\r\n          onChange={handleFile}\r\n        ></input>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}