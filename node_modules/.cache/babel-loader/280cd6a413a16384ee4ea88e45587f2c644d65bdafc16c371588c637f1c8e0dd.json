{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\CLICK_UP_TASKS\\\\CLICK_UP_TASKS\\\\contact-app\\\\Contact-App\\\\src\\\\Components\\\\Import.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CSVFileReader = () => {\n  _s();\n  const [jsonData, setJsonData] = useState(null);\n  const [error, setError] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    console.log(file);\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      const csvData = reader.result;\n      try {\n        const parsedData = parseCSV(csvData);\n        setJsonData(parsedData);\n        localStorage.setItem(\"csvData\", JSON.stringify(parsedData));\n        setError(null);\n      } catch (error) {\n        setError(\"Error parsing CSV file. Please make sure the file is in the correct format.\");\n        console.error(error); // Log the error for debugging\n      }\n    };\n    reader.readAsText(file);\n  };\n  const parseCSV = csvData => {\n    const lines = csvData.split(\"\\n\");\n    if (lines.length < 2) {\n      throw new Error(\"CSV file is empty or doesn't contain valid data.\");\n    }\n    const headers = lines[0].split(\",\");\n    const data = [];\n    for (let i = 1; i < lines.length; i++) {\n      const values = lines[i].split(\",\");\n      if (values.length === headers.length) {\n        const obj = {};\n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j]] = values[j];\n        }\n        data.push(obj);\n      }\n    }\n    return data;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CSV File Reader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), jsonData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"JSON Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(jsonData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CSVFileReader, \"UOLQLpbkqbmpq0z6mD1S9sAL6Zo=\");\n_c = CSVFileReader;\nexport default CSVFileReader;\nvar _c;\n$RefreshReg$(_c, \"CSVFileReader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CSVFileReader","_s","jsonData","setJsonData","error","setError","handleFileChange","event","file","target","files","console","log","reader","FileReader","onload","csvData","result","parsedData","parseCSV","localStorage","setItem","JSON","stringify","readAsText","lines","split","length","Error","headers","data","i","values","obj","j","push","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","style","color","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/CLICK_UP_TASKS/CLICK_UP_TASKS/contact-app/Contact-App/src/Components/Import.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst CSVFileReader = () => {\r\n  const [jsonData, setJsonData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    console.log(file)\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const csvData = reader.result;\r\n      try {\r\n        const parsedData = parseCSV(csvData);\r\n        setJsonData(parsedData);\r\n        localStorage.setItem(\"csvData\", JSON.stringify(parsedData));\r\n        setError(null);\r\n      } catch (error) {\r\n        setError(\"Error parsing CSV file. Please make sure the file is in the correct format.\");\r\n        console.error(error); // Log the error for debugging\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const parseCSV = (csvData) => {\r\n    const lines = csvData.split(\"\\n\");\r\n    if (lines.length < 2) {\r\n      throw new Error(\"CSV file is empty or doesn't contain valid data.\");\r\n    }\r\n\r\n    const headers = lines[0].split(\",\");\r\n    const data = [];\r\n    for (let i = 1; i < lines.length; i++) {\r\n      const values = lines[i].split(\",\");\r\n      if (values.length === headers.length) {\r\n        const obj = {};\r\n        for (let j = 0; j < headers.length; j++) {\r\n          obj[headers[j]] = values[j];\r\n        }\r\n        data.push(obj);\r\n      }\r\n    }\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>CSV File Reader</h2>\r\n      <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {jsonData && (\r\n        <div>\r\n          <h3>JSON Data</h3>\r\n          <pre>{JSON.stringify(jsonData, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CSVFileReader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}