{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\CLICK_UP_TASKS\\\\CLICK_UP_TASKS\\\\contact-app\\\\Contact-App\\\\src\\\\Components\\\\Import.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CSVFileReader = () => {\n  _s();\n  const [jsonData, setJsonData] = useState(null);\n  const [error, setError] = useState(null);\n  const fileInputRef = useRef(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      const csvData = reader.result;\n      try {\n        const parsedData = parseCSV(csvData);\n        setJsonData(parsedData);\n        setError(null);\n      } catch (error) {\n        setError(\"Error parsing CSV file. Please make sure the file is in the correct format.\");\n        console.error(error); // Log the error for debugging\n      }\n    };\n    reader.readAsText(file);\n  };\n  const parseCSV = csvData => {\n    const lines = csvData.split(\"\\n\");\n    const data = lines.map(line => line.split(\",\"));\n    return data;\n  };\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CSV File Reader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange,\n      ref: fileInputRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Upload CSV File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), jsonData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"CSV Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(jsonData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(CSVFileReader, \"6F1B3W/IsMyTEW1B/MWXxBV/ocg=\");\n_c = CSVFileReader;\nexport default CSVFileReader;\nvar _c;\n$RefreshReg$(_c, \"CSVFileReader\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","CSVFileReader","_s","jsonData","setJsonData","error","setError","fileInputRef","handleFileChange","event","file","target","files","reader","FileReader","onload","csvData","result","parsedData","parseCSV","console","readAsText","lines","split","data","map","line","handleButtonClick","current","click","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","ref","style","display","onClick","color","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/CLICK_UP_TASKS/CLICK_UP_TASKS/contact-app/Contact-App/src/Components/Import.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nconst CSVFileReader = () => {\r\n  const [jsonData, setJsonData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const csvData = reader.result;\r\n      try {\r\n        const parsedData = parseCSV(csvData);\r\n        setJsonData(parsedData);\r\n        setError(null);\r\n      } catch (error) {\r\n        setError(\r\n          \"Error parsing CSV file. Please make sure the file is in the correct format.\"\r\n        );\r\n        console.error(error); // Log the error for debugging\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const parseCSV = (csvData) => {\r\n    const lines = csvData.split(\"\\n\");\r\n    const data = lines.map((line) => line.split(\",\"));\r\n    return data;\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>CSV File Reader</h2>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".csv\"\r\n        onChange={handleFileChange}\r\n        ref={fileInputRef}\r\n        style={{ display: \"none\" }}\r\n      />\r\n      <button onClick={handleButtonClick}>Upload CSV File</button>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {jsonData && (\r\n        <div>\r\n          <h3>CSV Data</h3>\r\n          <pre>{JSON.stringify(jsonData, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CSVFileReader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}