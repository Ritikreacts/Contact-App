{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\CLICK_UP_TASKS\\\\CLICK_UP_TASKS\\\\contact-app\\\\Contact-App\\\\src\\\\Components\\\\Action.jsx\",\n  _s3 = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useCSVReader, useCSVDownloader } from \"react-papaparse\"; // Import useCSVReader from react-papaparse\n// import { NavLink } from \"react-router-dom\";\n// import { useLocation } from \"react-router-dom\";\n\n// const Action = () => {\n//   const [importedData, setImportedData] = useState([]);\n//   const location = useLocation();\n//   const { pathname } = location;\n//   const splitLocation = pathname.split(\"/\");\n\n//   const activeAdd = splitLocation[1] === \"home\" && splitLocation[2] === \"add\";\n//   const activeView = splitLocation[1] === \"home\" && splitLocation[2] === \"view\";\n//   const activeImport =\n//     splitLocation[1] === \"home\" && splitLocation[2] === \"import\";\n//   const activeExport =\n//     splitLocation[1] === \"home\" && splitLocation[2] === \"export\";\n\n//   const handleImport = (data) => {\n//     setImportedData(data);\n//     // Update your local storage with imported data\n//     localStorage.setItem(\"importedData\", JSON.stringify(data));\n//   };\n\n//   const Import = () => {\n//     const { openDialog } = useCSVReader({\n//       onFileLoaded: handleImport,\n//     });\n\n//     return (\n//       <div className=\"import\">\n//         <button className=\"import-btn\" onClick={openDialog}>\n//           Import\n//         </button>\n//       </div>\n//     );\n//   };\n\n//   const Export = () => {\n//     const { CSVDownloader, Type } = useCSVDownloader();\n//     const activeUserId =\n//       sessionStorage.getItem(\"activeUserId\") !== null\n//         ? sessionStorage.getItem(\"activeUserId\")\n//         : null;\n//     const data = JSON.parse(localStorage.getItem(activeUserId)) || [];\n//     return (\n//       <div className=\"export\">\n//         <CSVDownloader\n//           className=\"export-btn\"\n//           type={Type.Button}\n//           bom={true}\n//           filename={\"JSON-TO-CSV\"}\n//           delimiter={\";\"}\n//           data={data}\n//         >\n//           Export\n//         </CSVDownloader>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div className=\"new-container\">\n//       <NavLink\n//         to={{ pathname: \"/home/add\", state: importedData }}\n//         className={activeAdd ? \"active\" : \"\"}\n//       >\n//         Add Contact\n//       </NavLink>\n//       <NavLink to=\"/home/view\" className={activeView ? \"active\" : \"\"}>\n//         View Contact\n//       </NavLink>\n//       <NavLink>{Import()}</NavLink>\n//       <NavLink>{Export()}</NavLink>\n//     </div>\n//   );\n// };\n\n// export default Action;\nimport React, { useState } from \"react\";\nimport { useCSVReader, useCSVDownloader } from \"react-papaparse\"; // Import useCSVReader from react-papaparse\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Action = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [importedData, setImportedData] = useState([]);\n  const handleImport = data => {\n    setImportedData(data);\n    // Update your local storage with imported data\n    localStorage.setItem(\"importedData\", JSON.stringify(data));\n  };\n  const Import = () => {\n    _s();\n    const {\n      openDialog\n    } = useCSVReader({\n      onFileLoaded: handleImport\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"import\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"import-btn\",\n        onClick: openDialog,\n        children: \"Import\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Import, \"wCO582a2UjafALQO/3rbb5f1BKY=\", false, function () {\n    return [useCSVReader];\n  });\n  const Export = ({\n    data\n  }) => {\n    _s2();\n    const {\n      CSVDownloader,\n      Type\n    } = useCSVDownloader();\n\n    // Convert data to CSV format\n    const csvData = data.map(item => ({\n      avatar: item.avatar,\n      contactId: item.contactId,\n      email: item.email,\n      name: item.name,\n      number: item.number\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"export\",\n      children: /*#__PURE__*/_jsxDEV(CSVDownloader, {\n        className: \"export-btn\",\n        type: Type.Button,\n        bom: true,\n        filename: \"JSON-TO-CSV\",\n        delimiter: \";\",\n        data: csvData,\n        children: \"Export\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  };\n  _s2(Export, \"eoMbxJfUlnNdpnaDLBmCtQf6qXc=\", false, function () {\n    return [useCSVDownloader];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/home/add\",\n      className: \"active\",\n      children: \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/home/view\",\n      children: \"View Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      children: Import()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      children: importedData.length > 0 && /*#__PURE__*/_jsxDEV(Export, {\n        data: importedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s3(Action, \"jrzV7pY+IbZ30r/LPLwoy15h8sw=\");\n_c = Action;\nexport default Action;\nvar _c;\n$RefreshReg$(_c, \"Action\");","map":{"version":3,"names":["React","useState","useCSVReader","useCSVDownloader","NavLink","jsxDEV","_jsxDEV","Action","_s3","_s","$RefreshSig$","_s2","importedData","setImportedData","handleImport","data","localStorage","setItem","JSON","stringify","Import","openDialog","onFileLoaded","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Export","CSVDownloader","Type","csvData","map","item","avatar","contactId","email","name","number","type","Button","bom","filename","delimiter","to","length","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/CLICK_UP_TASKS/CLICK_UP_TASKS/contact-app/Contact-App/src/Components/Action.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useCSVReader, useCSVDownloader } from \"react-papaparse\"; // Import useCSVReader from react-papaparse\r\n// import { NavLink } from \"react-router-dom\";\r\n// import { useLocation } from \"react-router-dom\";\r\n\r\n// const Action = () => {\r\n//   const [importedData, setImportedData] = useState([]);\r\n//   const location = useLocation();\r\n//   const { pathname } = location;\r\n//   const splitLocation = pathname.split(\"/\");\r\n\r\n//   const activeAdd = splitLocation[1] === \"home\" && splitLocation[2] === \"add\";\r\n//   const activeView = splitLocation[1] === \"home\" && splitLocation[2] === \"view\";\r\n//   const activeImport =\r\n//     splitLocation[1] === \"home\" && splitLocation[2] === \"import\";\r\n//   const activeExport =\r\n//     splitLocation[1] === \"home\" && splitLocation[2] === \"export\";\r\n\r\n//   const handleImport = (data) => {\r\n//     setImportedData(data);\r\n//     // Update your local storage with imported data\r\n//     localStorage.setItem(\"importedData\", JSON.stringify(data));\r\n//   };\r\n\r\n//   const Import = () => {\r\n//     const { openDialog } = useCSVReader({\r\n//       onFileLoaded: handleImport,\r\n//     });\r\n\r\n//     return (\r\n//       <div className=\"import\">\r\n//         <button className=\"import-btn\" onClick={openDialog}>\r\n//           Import\r\n//         </button>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const Export = () => {\r\n//     const { CSVDownloader, Type } = useCSVDownloader();\r\n//     const activeUserId =\r\n//       sessionStorage.getItem(\"activeUserId\") !== null\r\n//         ? sessionStorage.getItem(\"activeUserId\")\r\n//         : null;\r\n//     const data = JSON.parse(localStorage.getItem(activeUserId)) || [];\r\n//     return (\r\n//       <div className=\"export\">\r\n//         <CSVDownloader\r\n//           className=\"export-btn\"\r\n//           type={Type.Button}\r\n//           bom={true}\r\n//           filename={\"JSON-TO-CSV\"}\r\n//           delimiter={\";\"}\r\n//           data={data}\r\n//         >\r\n//           Export\r\n//         </CSVDownloader>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"new-container\">\r\n//       <NavLink\r\n//         to={{ pathname: \"/home/add\", state: importedData }}\r\n//         className={activeAdd ? \"active\" : \"\"}\r\n//       >\r\n//         Add Contact\r\n//       </NavLink>\r\n//       <NavLink to=\"/home/view\" className={activeView ? \"active\" : \"\"}>\r\n//         View Contact\r\n//       </NavLink>\r\n//       <NavLink>{Import()}</NavLink>\r\n//       <NavLink>{Export()}</NavLink>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Action;\r\nimport React, { useState } from \"react\";\r\nimport { useCSVReader, useCSVDownloader } from \"react-papaparse\"; // Import useCSVReader from react-papaparse\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Action = () => {\r\n  const [importedData, setImportedData] = useState([]);\r\n  \r\n  const handleImport = (data) => {\r\n    setImportedData(data);\r\n    // Update your local storage with imported data\r\n    localStorage.setItem(\"importedData\", JSON.stringify(data));\r\n  };\r\n\r\n  const Import = () => {\r\n    const { openDialog } = useCSVReader({\r\n      onFileLoaded: handleImport,\r\n    });\r\n\r\n    return (\r\n      <div className=\"import\">\r\n        <button className=\"import-btn\" onClick={openDialog}>\r\n          Import\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Export = ({ data }) => {\r\n    const { CSVDownloader, Type } = useCSVDownloader();\r\n\r\n    // Convert data to CSV format\r\n    const csvData = data.map((item) => ({\r\n      avatar: item.avatar,\r\n      contactId: item.contactId,\r\n      email: item.email,\r\n      name: item.name,\r\n      number: item.number,\r\n    }));\r\n\r\n    return (\r\n      <div className=\"export\">\r\n        <CSVDownloader\r\n          className=\"export-btn\"\r\n          type={Type.Button}\r\n          bom={true}\r\n          filename={\"JSON-TO-CSV\"}\r\n          delimiter={\";\"}\r\n          data={csvData}\r\n        >\r\n          Export\r\n        </CSVDownloader>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-container\">\r\n      <NavLink to=\"/home/add\" className=\"active\">\r\n        Add Contact\r\n      </NavLink>\r\n      <NavLink to=\"/home/view\">\r\n        View Contact\r\n      </NavLink>\r\n      <NavLink>{Import()}</NavLink>\r\n      <NavLink>{importedData.length > 0 && <Export data={importedData} />}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Action;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}